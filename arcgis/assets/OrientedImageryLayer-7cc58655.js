import{ai as r,aj as t,al as s,aq as y}from"./index-888ef8d4.js";import n from"./FeatureLayer-b7ad044f.js";import"./UniqueValueRenderer-3a3aef3d.js";import"./ColorStop-5dd24a85.js";import"./diffUtils-43577d30.js";import"./colorRamps-f58bc08e.js";import"./jsonUtils-4d6628d3.js";import"./DictionaryLoader-8f10c9aa.js";import"./FieldsIndex-d94786ea.js";import"./heatmapUtils-48a69b11.js";import"./sql-bb25550f.js";import"./FeatureLayerBase-378715d1.js";import"./featureLayerUtils-2ef2c1f5.js";import"./AttachmentQuery-f885be8d.js";import"./Query-66deb263.js";import"./RelationshipQuery-d0cb8dd1.js";import"./serviceCapabilitiesUtils-09498ee7.js";import"./editsZScale-393d3c04.js";import"./queryZScale-0521af07.js";import"./FeatureSet-326674fa.js";import"./APIKeyMixin-1e2aef06.js";import"./ArcGISService-b304da72.js";import"./CustomParametersMixin-67adffbb.js";import"./EditBusLayer-49e0354b.js";import"./FeatureEffectLayer-7d62cf30.js";import"./FeatureEffect-88120ef9.js";import"./FeatureFilter-8d009764.js";import"./FeatureReductionLayer-700dc81d.js";import"./LabelClass-be5c1571.js";import"./defaults-ee7ede40.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-5bd7358e.js";import"./TemporalLayer-f95249bd.js";import"./FeatureTemplate-869c518a.js";import"./FeatureType-7302997b.js";import"./fieldProperties-a347e1c6.js";import"./labelingInfo-d8717546.js";import"./versionUtils-24768af9.js";import"./styleUtils-21ec589e.js";import"./TopFeaturesQuery-1ed01c54.js";import"./popupUtils-508fd57e.js";function o(i){return(a,d,m)=>{if(!a)return null;const p=a[0].orientedImageryProperties;return(p==null?void 0:p[i])??null}}let e=class extends n{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){var p;const{elevationSource:i,demPathPrefix:a,demPathSuffix:d}=this;if(!((p=i==null?void 0:i.url)!=null&&p.trim()))return i;let m=i.url.trim();return a!=null&&a.trim()&&(m=`${a.trim()}/${m}`),d!=null&&d.trim()&&(m+=`/${d.trim()}`),{...i,url:m}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new y("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([s("esri.layers.OrientedImageryLayer")],e);const Z=e;export{Z as default};
